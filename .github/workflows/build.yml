name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install, build, and upload your site
        uses: withastro/action@v4
        with:
          package-manager: pnpm

  deploy:
    name: Deploy
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./
      
      - name: Unpack artifact
        run: |
          mkdir out/
          tar -xf artifact.tar -C out/

      - name: Upload files
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_BACKET_NAME: ${{ secrets.AWS_BACKET_NAME }}
        run: |
          aws configure set region $AWS_REGION
          aws s3 sync --endpoint-url $AWS_ENDPOINT out/ s3://${AWS_BACKET_NAME} --delete

      - name: Purge Cloudflare Cache
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/purge_cache" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"hosts":["pet.wavycat.ru"]}'
